#!/bin/bash -u

LOGFILE='/tmp/wp-setup.log'
exec 1> >(awk '{print strftime("[%Y-%m-%d %H:%M:%S]"),$0 } { fflush() } ' >> $LOGFILE)
exec 2> >(awk '{print strftime("[%Y-%m-%d %H:%M:%S]"),$0 } { fflush() } ' >> $LOGFILE)


function create_db_name(){
	if [ ${1} == 'default' ]; then
		db='wordpress'
	else
		db=`echo "${1}" | sed "s/[\.|_|-]//g"`
		while [ `echo ${db}|wc -c` -gt 15 ]; do
			db=`echo ${db} | sed "s|.$||"`
		done
	fi
	echo ${db}
}

SITENAME=${1}
DATABASE=`create_db_name ${SITENAME}`
PASSWORD=`uuidgen | tr -d '-' | awk '{print substr($0, 0, 15)}'`
OWNER=`stat --format %U {{ wordpress_install_path }}`
GROUP=`stat --format %G {{ wordpress_install_path }}`
TEMPFILE=`mktemp /tmp/temp.XXXXXX`
TEMPDIR=`mktemp -d /tmp/temp.XXXXXX`
trap "cd /tmp/ ; rm -rf ${TEMPFILE} ${TEMPDIR}" EXIT

function get_wp(){
	curl -o /tmp/wordpress.tgz https://ja.wordpress.org/latest-ja.tar.gz
}

function delete_wp(){
	rm -f /tmp/wordpress.tgz
}

function unarchive_deploy(){
	if [ -e "{{ wordpress_install_path }}/${SITENAME}/" ]; then
		echo "ERROR: {{ wordpress_install_path }}/${SITENAME}/ is already exist."
		exit 99
	else
		tar xzf /tmp/wordpress.tgz -C ${TEMPDIR}
		mv ${TEMPDIR}/wordpress {{ wordpress_install_path }}/${SITENAME}
	fi
}

function set_permission(){
	chown -R ${OWNER}:${GROUP} {{ wordpress_install_path }}/${SITENAME}
}

function create_databases(){
	if [ `mysql -e "show databases"|grep ${DATABASE} | wc -l` -eq 0 ]; then
		mysql -e "create database ${DATABASE}"
		mysql -e "grant all privileges on ${DATABASE}.* to ${DATABASE}@localhost identified by '${PASSWORD}'"
		mysql -e "flush privileges"
	else
		echo "ERROR: '${DATABASE}' is already exist."
		exit 99
	fi
}

function rename_conf(){
	if [ -e "{{ wordpress_install_path }}/${SITENAME}/wp-config-sample.php" -a ! -e "{{ wordpress_install_path }}/${SITENAME}/wp-config.php" ]; then
		mv {{ wordpress_install_path }}/${SITENAME}/wp-config-sample.php {{ wordpress_install_path }}/${SITENAME}/wp-config.php
	elif [ -e "{{ wordpress_install_path }}/${SITENAME}/wp-config.php" ]; then
		echo "INFO: wp-config.php is already exist."
	else
		echo 'ERROR: wp-config-sample.php rename failed.'
		exit 99
	fi
}

# http://stackoverflow.com/questions/6233398/download-and-insert-salt-string-inside-wordpress-wp-config-php-with-bash
function replace_salt_key(){
	SALT=$(curl -L https://api.wordpress.org/secret-key/1.1/salt/)
	STRING='put your unique phrase here'
	printf '%s\n' "g/$STRING/d" a "$SALT" . w | ed -s {{ wordpress_install_path }}/${SITENAME}/wp-config.php
}

function replace_config(){
	sed -i "s|database_name_here|${DATABASE}|" {{ wordpress_install_path }}/${SITENAME}/wp-config.php
	sed -i "s|username_here|${DATABASE}|" {{ wordpress_install_path }}/${SITENAME}/wp-config.php
	sed -i "s|password_here|${PASSWORD}|" {{ wordpress_install_path }}/${SITENAME}/wp-config.php
	replace_salt_key
}

function create_nginx_config(){
	if [ ${SITENAME} == 'default' ]; then
		/usr/local/sbin/create_default_config.sh ${SITENAME}
	else
		/usr/local/sbin/create_config.sh ${SITENAME}
	fi
	nginx -t
	if [ $? -eq 0 ]; then
		/sbin/service nginx reload
	else
		echo 'ERROR: nginx syntax error!'
		exit 99
	fi
}

get_wp
unarchive_deploy
set_permission
create_databases
rename_conf
replace_config
create_nginx_config
delete_wp
